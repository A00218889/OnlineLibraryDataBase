@page "/Customers/Add/"
@inject NavigationManager NavigationManager;
@inject Data.CustomerService CustomerService

<h3>Add Customer</h3>

<div>
    <hr />
    <EditForm Model="@_customer" OnValidSubmit="@HandleValidSubmit">

        <dl class="row">
            <dt class="col-sm-2">
            Customer Id
            </dt>
            <dd class="col-sm-10">
                <InputNumber id="CustomerId" @bind-Value="_customer.CustomerId" /> <ValidationMessage For="@(() => _customer.CustomerId)" />
            </dd>
            
            <dt class="col-sm-2">
                First Name
            </dt>
            <dd class="col-sm-10">
                <InputText id="FirstName" @bind-Value="_customer.FirstName" /> <ValidationMessage For="@(() => _customer.FirstName)" />
            </dd>

            <dt class="col-sm-2">
             Last Name
            </dt>
            <dd class="col-sm-10">
                <InputText id="LastName" @bind-Value="_customer.LastName" /> <ValidationMessage For="@(() => _customer.LastName)" />
            </dd>

            <dt class="col-sm-2">
               Access Id
            </dt>
            <dd class="col-sm-10">
                <InputNumber id="AccessId" @bind-Value="_customer.AccessId" /> <ValidationMessage For="@(() => _customer.AccessId)" />
            </dd>

        </dl>

        <button type="submit" class="btn btn-success">Submit</button>
        <DataAnnotationsValidator />
        <ValidationSummary />
    </EditForm>
</div>

<div>
    <a href="/Books/">Back to List</a>
</div>

@code {
    private Data.Book _customer = new Data.Book();

    private async Task HandleValidSubmit()
    {
        await BookService.AddBookAsync(_customer);

        NavigationManager.NavigateTo("/books");
    }
}