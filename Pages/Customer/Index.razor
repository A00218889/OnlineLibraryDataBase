@*
    @page "/books"
    @inject NavigationManager NavigationManager;
    @inject Data.LearningServices LearningServices;
    @inject IJSRuntime JsRuntime;

    <h3>Books</h3>

    <small>Add as many books as you want.</small>
    <div class="form-group">
        <a href="/Books/Add/" class="btn btn-success"><i class="oi oi-plus"></i> Add Book</a>
    </div>
    <br>

    @if (_book == null)
    {
        <p>
            <em>Loading...</em>
        </p>
    }
    else if (_book.Count == 0)
    {
        <p>No Records Found.</p>
    }
    else
    {
        <table class="table">
            <thead>
                <tr>
                    <th>BookID</th>
                    <th>BookName</th>
                    <th>Pagecount</th>
                    <th>Author</th>
                    <th>BookGenre</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var book in _book)
                {
                <tr>
                    <td>
                        <a href="/Books/View/@book.BookID">@book.BookID</a>
                    </td>
                    <td>@book.BookName</td>
                    <td>@book.Pagecount</td>
                    <td>@book.Author</td>
                    <td>@book.BookGenre</td>
                    <td>
                        <button class="btn btn-danger"
                                @onclick="@(e => RemoveBook(@book.BookID))">
                            Remove
                        </button>
                    </td>
                </tr>
                }
            </tbody>
        </table>
    }

    @code {
        List<Data.Book> _book = new List<Data.Book>();

        protected override async Task OnInitializedAsync()
        {
            await RefreshBooks();
        }

        private async Task RefreshBooks()
        {
            _book = await LearningServices.GetBooksAsync();
        }

        private async Task RemoveBook(int bookId)
        {
            var confirmation = await JsRuntime.InvokeAsync<bool>("confirm", "Are you sure you want to remove this book?");

            if (confirmation)
            {
                await LearningServices.RemoveBookAsync(bookId);
                await RefreshBooks();
            }
        }

    }
*@
