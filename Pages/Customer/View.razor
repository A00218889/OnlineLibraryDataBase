@page "/Customers/View/{CustomerId:int}"
@inject Data.CustomerService CustomerService

<h3>View Customer</h3>

<div>
    <hr />
    @if (_customer == null)
    {
        <p>
            <em>Loading...</em>
        </p>
    }
    else if (_customer.CustomerId == 0)
    {
        <p>No Records Found.</p>
    }
    else
    {
        <dl class="row">

            <dt class="col-sm-2">
                Customer Id
            </dt>
            <dd class="col-sm-10">
                @_customer.CustomerId
            </dd>

            <dt class="col-sm-2">
                First Name
            </dt>
            <dd class="col-sm-10">
                @_customer.FirstName
            </dd>

            <dt class="col-sm-2">
                Last Name
            </dt>
            <dd class="col-sm-10">
                @_customer.LastName
            </dd>

            <dt class="col-sm-2">
                Access Id
            </dt>
            <dd class="col-sm-10">
                @_customer.AccessId
            </dd>

             
        </dl>
    }
</div>

<div>
    <a href="/Customers/Edit/@_customer.CustomerId">Edit</a> | <a href="/Customers/">Back to List</a>
</div>

@code {

    [Parameter]
    public int CustomerId { get; set; }

    Data.Customer _customer = new Data.Customer();

    protected override async Task OnInitializedAsync()
    {
        await RefreshCustomer(CustomerId);
    }

    private async Task RefreshCustomer(int CustomerId)
    {
        _customer = await CustomerService.GetCustomerAsync(CustomerId);
    }
}
